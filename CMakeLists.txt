# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.28.0)
cmake_policy(SET CMP0091 NEW)
project(Doti LANGUAGES CXX)
set(CMAKE_CXX_SCAN_FOR_MODULES ON)

# target
add_library(Doti STATIC "")
set_target_properties(Doti PROPERTIES OUTPUT_NAME "Doti")
set_target_properties(Doti PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(Doti SYSTEM PRIVATE
    Z:/packages/xmake/packages/e/eigen/3.4.0/1af8f25c61b04e19afd2699bba8d04c0/include
    Z:/packages/xmake/packages/e/eigen/3.4.0/1af8f25c61b04e19afd2699bba8d04c0/include/eigen3
    Z:/packages/xmake/packages/g/glfw/3.4/fc47358da159466996f7d289b4cf1b4e/include
)
target_compile_definitions(Doti PRIVATE
    GLFW_INCLUDE_NONE
)
if(MSVC)
    target_compile_options(Doti PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(Doti PRIVATE -fexceptions)
    target_compile_options(Doti PRIVATE -fcxx-exceptions)
elseif(Gcc)
    target_compile_options(Doti PRIVATE -fexceptions)
endif()
set_target_properties(Doti PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(Doti PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(Doti PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(Doti PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(Doti PRIVATE -Zi)
else()
    target_compile_options(Doti PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET Doti PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(Doti PRIVATE
    glfw3
    opengl32
    user32
    shell32
    gdi32
)
target_link_directories(Doti PRIVATE
    Z:/packages/xmake/packages/g/glfw/3.4/fc47358da159466996f7d289b4cf1b4e/lib
)
target_sources(Doti PRIVATE
        doti/Utils/color.cppm
        doti/Utils/ray.cppm
        doti/Utils/utils.cppm
        doti/Math/math.cppm
        wrapper/eigen.cppm
        wrapper/glfw.cppm
        wrapper/imgui.cppm
        wrapper/test.cppm
)

# target
add_executable(Editor "")
set_target_properties(Editor PROPERTIES OUTPUT_NAME "Editor")
set_target_properties(Editor PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
if(MSVC)
    target_compile_options(Editor PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(Editor PRIVATE -fexceptions)
    target_compile_options(Editor PRIVATE -fcxx-exceptions)
elseif(Gcc)
    target_compile_options(Editor PRIVATE -fexceptions)
endif()
set_target_properties(Editor PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(Editor PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(Editor PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(Editor PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(Editor PRIVATE -Zi)
else()
    target_compile_options(Editor PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET Editor PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(Editor PRIVATE
    editor/main.cpp
)

# target
add_custom_target(imgui_wrapper)
